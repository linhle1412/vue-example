aliases-deployment-triggers:
  - &when_deploy_stage
    event:
      - tag
    ref:
      - refs/tags/v*

  - &when_deploy_prod
    event:
      - tag
    ref:
      - refs/tags/p_v*

basic-build:
  - &build-setting
    username:
      from_secret: drone_username
    password:
      from_secret: drone_password
    tags: [ "${DRONE_TAG}", "latest" ]
    repo: registry.eyeteam.vn/tnv/tnv-web
    registry: registry.eyeteam.vn
    dockerfile: Dockerfile
    use_cache: true
    purge: false

  - &build
    name: docker-build
    image: plugins/docker
    settings:
      <<: *build-setting


kind: pipeline
name: default

concurrency:
  limit: 1

steps:
- name: prepare
  image: busybox
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - sh prepare.sh package.json
    - sh prepare.sh package-lock.json
  volumes:
    - name: cache
      path: /cache
  when:
    event:
      - tag


- <<: *build
  name: build-staging
  settings:
    <<: *build-setting
  volumes:
    - name: docker
      path: /var/lib/docker
  when:
    <<: *when_deploy_stage

- name: deploy-staging
  image: appleboy/drone-ssh:1.5.5
  settings:
    host: tnv.eyeteam.vn
    username: app
    storage_path: /drone/docker
    use_cache: true
    password:
      from_secret: ssh_password
    port: 22
    script:
      - export COMPOSE_PROJECT_NAME=tnv
      - export IMAGE_TAG="${DRONE_TAG}"
      - DOCKER_REPO='registry.eyeteam.vn/tnv/tnv-web'
      - export DOCKER_API_IMAGE=$DOCKER_REPO:$IMAGE_TAG
      - docker pull $DOCKER_API_IMAGE
      - cd ./tnv/deployment
      - docker-compose stop web
      - docker-compose rm -f web
      - docker-compose up -d web
  when:
    <<: *when_deploy_stage

- <<: *build
  name: build-prod
  settings:
    <<: *build-setting
  when:
    <<: *when_deploy_prod

- name: deploy-production
  image: appleboy/drone-ssh:1.5.5
  settings:
    host: dashboard.otoviethan.com.vn
    username: apphyund
    password:
      from_secret: ssh_prod_password
    port: 22
    script:
      - export COMPOSE_PROJECT_NAME=tnv
      - export IMAGE_TAG="${DRONE_TAG}"
      - DOCKER_REPO='registry.eyeteam.vn/tnv/tnv-web'
      - export DOCKER_API_IMAGE=$DOCKER_REPO:$IMAGE_TAG
      - docker pull $DOCKER_API_IMAGE
      - cd ./deployment
      - docker-compose stop api
      - docker-compose rm -f api
      - docker-compose run --rm api npm run migrate
      - docker-compose up -d api
  when:
    <<: *when_deploy_prod

- name: telegram
  image: appleboy/drone-telegram
  settings:
    token: 156097778:AAF1TTATcMAFsVabOLdxvLUkVCP1RvQC11w
    to: "-410318568"
    message: >
      {{#success build.status}}
      ✅ Build #{{build.number}} of `{{repo.name}}` succeeded.


      📝 Commit by {{commit.author}} on `{{commit.branch}}`:

      ```
      {{commit.message}}
      ```


      🌐 {{ build.link }}
      {{else}}
      ❌ Build #{{build.number}} of `{{repo.name}}` failed.


      📝 Commit by {{commit.author}} on `{{commit.branch}}`:

      ```
      {{commit.message}}
      ```


      🌐 {{ build.link }}
      {{/success}}
  when:
    status: [ success, failure ]

volumes:
  - name: cache
    host:
      path: /tmp/cache
  - name: docker
    host:
      path: /tmp/cache/${DRONE_REPO}/docker
